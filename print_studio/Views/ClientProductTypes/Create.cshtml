@model print_studio.Models.PrintOrder

@{
    ViewBag.Title = "Create";
}

<!-- Page info -->
<div class="page-top-info">
    <div class="container">
        <h4>Оформления</h4>
        <div class="site-pagination">
            <a href="/">Домой</a> /
            <a href="">Оформления заказа</a>
        </div>
    </div>
</div>
<!-- Page info end -->
<!-- checkout section  -->
<section class="checkout-section spad">
    <div class="container">
        @using (Html.BeginForm(Html.BeginForm("CreateOrder", "ClientProductTypes", FormMethod.Post)))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <input name="id_colorproduct" type="hidden" value=@ViewBag.idColor />
                <input name="id_size" type="hidden" value=@ViewBag.idSize />
                <input name="file" type="hidden" value=@ViewBag.file />

                <div class="col-lg-8 order-2 order-lg-1">
                    <form class="checkout-form">
                        <div class="cf-title"><h4>Личные данные</h4></div>
                        <p></p><hr />
                        <div class="row address-inputs">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.surname, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.adress, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.adress, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.adress, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.count, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.count, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.count, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="cf-title"><h4>Доставка и Оплата</h4></div>
                        <br />
                        <p>Доставка почтой Росии</p>
                        <p>Оплачивай при получении</p>
                        <br />
                        <hr />
                        <br />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Оформмить" class="site-btn submit-order-btn" />
                            </div>
                        </div>
                    </form>
                </div>

            </div>
        }
    </div>
</section>
<!-- checkout section end -->



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
